{"ast":null,"code":"import React,{useState,useEffect}from'react';import{fetchDataWithCache,realTimeService}from'../services/dataService';import{useNavigation}from'../services/navigationService';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const RealTimeDataDashboard=()=>{const[activeTab,setActiveTab]=useState('reddit');const[data,setData]=useState({reddit:null,twitter:null,github:null,huggingface:null});const[isLoading,setIsLoading]=useState(true);const[lastUpdated,setLastUpdated]=useState(new Date());const[autoRefresh,setAutoRefresh]=useState(true);const[refreshInterval,setRefreshInterval]=useState(300);// Handle initial data loading\nuseEffect(()=>{const fetchInitialData=async()=>{try{setIsLoading(true);const platformData=await fetchDataWithCache(activeTab);setData(prev=>({...prev,[activeTab]:platformData}));setLastUpdated(new Date());setIsLoading(false);}catch(error){console.error(`Error fetching ${activeTab} data:`,error);setIsLoading(false);}};fetchInitialData();// Set up real-time updates for the current tab\nconst unsubscribe=realTimeService.subscribe(activeTab,newData=>{setData(prev=>({...prev,[activeTab]:newData}));setLastUpdated(new Date());});return()=>{unsubscribe();};},[activeTab]);// Set up auto-refresh timer\nuseEffect(()=>{if(!autoRefresh)return;const interval=setInterval(async()=>{try{const platformData=await fetchDataWithCache(activeTab,true);setData(prev=>({...prev,[activeTab]:platformData}));setLastUpdated(new Date());}catch(error){console.error(`Error refreshing ${activeTab} data:`,error);}},refreshInterval*1000);return()=>{clearInterval(interval);};},[autoRefresh,refreshInterval,activeTab]);// Handle manual refresh\nconst handleRefresh=async()=>{try{setIsLoading(true);const platformData=await fetchDataWithCache(activeTab,true);setData(prev=>({...prev,[activeTab]:platformData}));setLastUpdated(new Date());setIsLoading(false);}catch(error){console.error(`Error refreshing ${activeTab} data:`,error);setIsLoading(false);}};// Toggle auto-refresh\nconst toggleAutoRefresh=()=>{setAutoRefresh(!autoRefresh);};// Get the appropriate content for the current tab\nconst renderTabContent=()=>{if(isLoading){return/*#__PURE__*/_jsx(LoadingSpinner,{});}switch(activeTab){case'reddit':return/*#__PURE__*/_jsx(RedditContent,{data:data.reddit});case'twitter':return/*#__PURE__*/_jsx(TwitterContent,{data:data.twitter});case'github':return/*#__PURE__*/_jsx(GitHubContent,{data:data.github});case'huggingface':return/*#__PURE__*/_jsx(HuggingFaceContent,{data:data.huggingface});default:return/*#__PURE__*/_jsx(\"div\",{children:\"Select a platform to view data\"});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"data-dashboard\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-title\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Real-Time Prompt Engineering Data Hub\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-controls\",children:/*#__PURE__*/_jsxs(\"select\",{value:refreshInterval,onChange:e=>setRefreshInterval(Number(e.target.value)),className:\"refresh-interval\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"60\",children:\"Refresh: 1 minute\"}),/*#__PURE__*/_jsx(\"option\",{value:\"300\",children:\"Refresh: 5 minutes\"}),/*#__PURE__*/_jsx(\"option\",{value:\"600\",children:\"Refresh: 10 minutes\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1800\",children:\"Refresh: 30 minutes\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-tabs\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`dashboard-tab tab-reddit ${activeTab==='reddit'?'active':''}`,onClick:()=>setActiveTab('reddit'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"tab-icon\",children:\"\\uD83D\\uDDE3\\uFE0F\"}),\"Reddit Discussions\"]}),/*#__PURE__*/_jsxs(\"div\",{className:`dashboard-tab tab-twitter ${activeTab==='twitter'?'active':''}`,onClick:()=>setActiveTab('twitter'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"tab-icon\",children:\"\\uD83D\\uDC26\"}),\"Twitter Trends\"]}),/*#__PURE__*/_jsxs(\"div\",{className:`dashboard-tab tab-github ${activeTab==='github'?'active':''}`,onClick:()=>setActiveTab('github'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"tab-icon\",children:\"\\uD83D\\uDCBB\"}),\"GitHub Projects\"]}),/*#__PURE__*/_jsxs(\"div\",{className:`dashboard-tab tab-huggingface ${activeTab==='huggingface'?'active':''}`,onClick:()=>setActiveTab('huggingface'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"tab-icon\",children:\"\\uD83E\\uDD17\"}),\"HuggingFace Models\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-content\",children:renderTabContent()}),/*#__PURE__*/_jsxs(\"div\",{className:\"refresh-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Last updated: \",lastUpdated.toLocaleString()]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auto-refresh\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Auto-refresh:\"}),/*#__PURE__*/_jsxs(\"label\",{className:\"toggle-switch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:autoRefresh,onChange:toggleAutoRefresh}),/*#__PURE__*/_jsx(\"span\",{className:\"toggle-slider\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"refresh-button\",onClick:handleRefresh,disabled:isLoading,children:isLoading?'Refreshing...':'Refresh Now'})]})]})]});};// Loading spinner component\nconst LoadingSpinner=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading-text\",children:\"Loading real-time data...\"})]});// Reddit content component\nconst RedditContent=_ref=>{let{data}=_ref;if(!data||data.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"no-data-message\",children:\"No Reddit discussions found\"});}return/*#__PURE__*/_jsx(_Fragment,{children:data.map((post,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"data-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-title\",children:post.title}),/*#__PURE__*/_jsx(\"div\",{className:\"card-meta\",children:post.subreddit})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:post.selftext?/*#__PURE__*/_jsx(_Fragment,{children:post.selftext.length>200?`${post.selftext.substring(0,200)}...`:post.selftext}):'Click to view the full post...'}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-footer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\u2B06\\uFE0F\"}),/*#__PURE__*/_jsx(\"span\",{children:post.score})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\uD83D\\uDCAC\"}),/*#__PURE__*/_jsx(\"span\",{children:post.num_comments})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-meta\",children:[\"Posted by u/\",post.author,\" \\u2022 \",formatTimeAgo(post.created)]})]}),post.url&&/*#__PURE__*/_jsx(\"a\",{href:post.url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"card-link\",children:\"View on Reddit\"})]},post.id||index))});};// Twitter content component\nconst TwitterContent=_ref2=>{let{data}=_ref2;if(!data||data.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"no-data-message\",children:\"No Twitter trends found\"});}return/*#__PURE__*/_jsx(_Fragment,{children:data.map((tweet,index)=>{var _tweet$displayName;return/*#__PURE__*/_jsxs(\"div\",{className:\"data-card twitter-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"avatar\",children:((_tweet$displayName=tweet.displayName)===null||_tweet$displayName===void 0?void 0:_tweet$displayName.charAt(0))||'U'}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-title\",children:tweet.displayName}),/*#__PURE__*/_jsx(\"div\",{className:\"card-meta\",children:tweet.username})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-content twitter-content\",children:tweet.content}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-footer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\u2764\\uFE0F\"}),/*#__PURE__*/_jsx(\"span\",{children:tweet.likes})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\uD83D\\uDD04\"}),/*#__PURE__*/_jsx(\"span\",{children:tweet.retweets})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-meta\",children:formatTimeAgo(tweet.created)})]}),tweet.url&&/*#__PURE__*/_jsx(\"a\",{href:tweet.url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"card-link\",children:\"View on Twitter\"})]},tweet.id||index);})});};// GitHub content component\nconst GitHubContent=_ref3=>{let{data}=_ref3;if(!data||data.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"no-data-message\",children:\"No GitHub projects found\"});}return/*#__PURE__*/_jsx(_Fragment,{children:data.map((repo,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"data-card github-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-title\",children:repo.repo}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-meta\",children:[\"by \",repo.author]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:repo.description||'No description available'}),/*#__PURE__*/_jsx(\"div\",{className:\"language-tag\",style:{backgroundColor:getLanguageColor(repo.language)},children:repo.language||'Various'}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-footer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\u2B50\"}),/*#__PURE__*/_jsx(\"span\",{children:repo.stars})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\uD83C\\uDF74\"}),/*#__PURE__*/_jsx(\"span\",{children:repo.forks})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsx(\"span\",{children:repo.issues})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-meta\",children:[\"Updated \",formatTimeAgo(repo.updated)]})]}),repo.url&&/*#__PURE__*/_jsx(\"a\",{href:repo.url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"card-link\",children:\"View on GitHub\"})]},repo.id||index))});};// HuggingFace content component\nconst HuggingFaceContent=_ref4=>{let{data}=_ref4;if(!data||data.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"no-data-message\",children:\"No HuggingFace models found\"});}return/*#__PURE__*/_jsx(_Fragment,{children:data.map((model,index)=>{var _model$tags,_model$downloads;return/*#__PURE__*/_jsxs(\"div\",{className:\"data-card huggingface-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-title\",children:model.model}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-meta\",children:[\"by \",model.author]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:model.description||'No description available'}),/*#__PURE__*/_jsx(\"div\",{className:\"card-tags\",children:(_model$tags=model.tags)===null||_model$tags===void 0?void 0:_model$tags.map((tag,i)=>/*#__PURE__*/_jsx(\"span\",{className:\"model-tag\",children:tag},i))}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-footer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-stats\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\u2B07\\uFE0F\"}),/*#__PURE__*/_jsx(\"span\",{children:((_model$downloads=model.downloads)===null||_model$downloads===void 0?void 0:_model$downloads.toLocaleString())||0})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-meta\",children:[\"Updated \",formatTimeAgo(model.updated)]})]}),model.url&&/*#__PURE__*/_jsx(\"a\",{href:model.url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"card-link\",children:\"View on HuggingFace\"})]},model.id||index);})});};// Helper function to format time ago\nfunction formatTimeAgo(dateString){if(!dateString)return'Unknown time';const date=new Date(dateString);const now=new Date();const seconds=Math.floor((now-date)/1000);if(seconds<60){return'just now';}const minutes=Math.floor(seconds/60);if(minutes<60){return`${minutes} minute${minutes!==1?'s':''} ago`;}const hours=Math.floor(minutes/60);if(hours<24){return`${hours} hour${hours!==1?'s':''} ago`;}const days=Math.floor(hours/24);if(days<30){return`${days} day${days!==1?'s':''} ago`;}const months=Math.floor(days/30);if(months<12){return`${months} month${months!==1?'s':''} ago`;}const years=Math.floor(months/12);return`${years} year${years!==1?'s':''} ago`;}// Helper function to get color for programming language\nfunction getLanguageColor(language){const colors={JavaScript:'#f1e05a',TypeScript:'#2b7489',Python:'#3572A5',Java:'#b07219','C++':'#f34b7d',C:'#555555','C#':'#178600',PHP:'#4F5D95',Ruby:'#701516',Go:'#00ADD8',Rust:'#dea584',Swift:'#ffac45',Kotlin:'#F18E33',Markdown:'#083fa1',HTML:'#e34c26',CSS:'#563d7c',Shell:'#89e051'};return colors[language]||'#6e5494';}export default RealTimeDataDashboard;","map":{"version":3,"names":["React","useState","useEffect","fetchDataWithCache","realTimeService","useNavigation","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RealTimeDataDashboard","activeTab","setActiveTab","data","setData","reddit","twitter","github","huggingface","isLoading","setIsLoading","lastUpdated","setLastUpdated","Date","autoRefresh","setAutoRefresh","refreshInterval","setRefreshInterval","fetchInitialData","platformData","prev","error","console","unsubscribe","subscribe","newData","interval","setInterval","clearInterval","handleRefresh","toggleAutoRefresh","renderTabContent","LoadingSpinner","RedditContent","TwitterContent","GitHubContent","HuggingFaceContent","children","className","value","onChange","e","Number","target","onClick","toLocaleString","type","checked","disabled","_ref","length","map","post","index","title","subreddit","selftext","substring","score","num_comments","author","formatTimeAgo","created","url","href","rel","id","_ref2","tweet","_tweet$displayName","displayName","charAt","username","content","likes","retweets","_ref3","repo","description","style","backgroundColor","getLanguageColor","language","stars","forks","issues","updated","_ref4","model","_model$tags","_model$downloads","tags","tag","i","downloads","dateString","date","now","seconds","Math","floor","minutes","hours","days","months","years","colors","JavaScript","TypeScript","Python","Java","C","PHP","Ruby","Go","Rust","Swift","Kotlin","Markdown","HTML","CSS","Shell"],"sources":["C:/Users/gorby/Documents/GitHub/groktutor-new/src/components/RealTimeDataDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchDataWithCache, realTimeService } from '../services/dataService';\r\nimport { useNavigation } from '../services/navigationService';\r\n\r\nconst RealTimeDataDashboard = () => {\r\n  const [activeTab, setActiveTab] = useState('reddit');\r\n  const [data, setData] = useState({\r\n    reddit: null,\r\n    twitter: null,\r\n    github: null,\r\n    huggingface: null\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [lastUpdated, setLastUpdated] = useState(new Date());\r\n  const [autoRefresh, setAutoRefresh] = useState(true);\r\n  const [refreshInterval, setRefreshInterval] = useState(300);\r\n  \r\n  // Handle initial data loading\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const platformData = await fetchDataWithCache(activeTab);\r\n        setData(prev => ({ ...prev, [activeTab]: platformData }));\r\n        setLastUpdated(new Date());\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error(`Error fetching ${activeTab} data:`, error);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchInitialData();\r\n    \r\n    // Set up real-time updates for the current tab\r\n    const unsubscribe = realTimeService.subscribe(activeTab, (newData) => {\r\n      setData(prev => ({ ...prev, [activeTab]: newData }));\r\n      setLastUpdated(new Date());\r\n    });\r\n    \r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [activeTab]);\r\n  \r\n  // Set up auto-refresh timer\r\n  useEffect(() => {\r\n    if (!autoRefresh) return;\r\n    \r\n    const interval = setInterval(async () => {\r\n      try {\r\n        const platformData = await fetchDataWithCache(activeTab, true);\r\n        setData(prev => ({ ...prev, [activeTab]: platformData }));\r\n        setLastUpdated(new Date());\r\n      } catch (error) {\r\n        console.error(`Error refreshing ${activeTab} data:`, error);\r\n      }\r\n    }, refreshInterval * 1000);\r\n    \r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [autoRefresh, refreshInterval, activeTab]);\r\n  \r\n  // Handle manual refresh\r\n  const handleRefresh = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const platformData = await fetchDataWithCache(activeTab, true);\r\n      setData(prev => ({ ...prev, [activeTab]: platformData }));\r\n      setLastUpdated(new Date());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error(`Error refreshing ${activeTab} data:`, error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Toggle auto-refresh\r\n  const toggleAutoRefresh = () => {\r\n    setAutoRefresh(!autoRefresh);\r\n  };\r\n  \r\n  // Get the appropriate content for the current tab\r\n  const renderTabContent = () => {\r\n    if (isLoading) {\r\n      return <LoadingSpinner />;\r\n    }\r\n    \r\n    switch (activeTab) {\r\n      case 'reddit':\r\n        return <RedditContent data={data.reddit} />;\r\n      case 'twitter':\r\n        return <TwitterContent data={data.twitter} />;\r\n      case 'github':\r\n        return <GitHubContent data={data.github} />;\r\n      case 'huggingface':\r\n        return <HuggingFaceContent data={data.huggingface} />;\r\n      default:\r\n        return <div>Select a platform to view data</div>;\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"data-dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <div className=\"dashboard-title\">\r\n          <span>📊</span>\r\n          <span>Real-Time Prompt Engineering Data Hub</span>\r\n        </div>\r\n        <div className=\"dashboard-controls\">\r\n          <select \r\n            value={refreshInterval}\r\n            onChange={(e) => setRefreshInterval(Number(e.target.value))}\r\n            className=\"refresh-interval\"\r\n          >\r\n            <option value=\"60\">Refresh: 1 minute</option>\r\n            <option value=\"300\">Refresh: 5 minutes</option>\r\n            <option value=\"600\">Refresh: 10 minutes</option>\r\n            <option value=\"1800\">Refresh: 30 minutes</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"dashboard-tabs\">\r\n        <div \r\n          className={`dashboard-tab tab-reddit ${activeTab === 'reddit' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('reddit')}\r\n        >\r\n          <span className=\"tab-icon\">🗣️</span>\r\n          Reddit Discussions\r\n        </div>\r\n        <div \r\n          className={`dashboard-tab tab-twitter ${activeTab === 'twitter' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('twitter')}\r\n        >\r\n          <span className=\"tab-icon\">🐦</span>\r\n          Twitter Trends\r\n        </div>\r\n        <div \r\n          className={`dashboard-tab tab-github ${activeTab === 'github' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('github')}\r\n        >\r\n          <span className=\"tab-icon\">💻</span>\r\n          GitHub Projects\r\n        </div>\r\n        <div \r\n          className={`dashboard-tab tab-huggingface ${activeTab === 'huggingface' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('huggingface')}\r\n        >\r\n          <span className=\"tab-icon\">🤗</span>\r\n          HuggingFace Models\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"dashboard-content\">\r\n        {renderTabContent()}\r\n      </div>\r\n      \r\n      <div className=\"refresh-controls\">\r\n        <div>Last updated: {lastUpdated.toLocaleString()}</div>\r\n        <div className=\"auto-refresh\">\r\n          <span>Auto-refresh:</span>\r\n          <label className=\"toggle-switch\">\r\n            <input \r\n              type=\"checkbox\" \r\n              checked={autoRefresh} \r\n              onChange={toggleAutoRefresh}\r\n            />\r\n            <span className=\"toggle-slider\"></span>\r\n          </label>\r\n          <button className=\"refresh-button\" onClick={handleRefresh} disabled={isLoading}>\r\n            {isLoading ? 'Refreshing...' : 'Refresh Now'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Loading spinner component\r\nconst LoadingSpinner = () => (\r\n  <div className=\"loading-container\">\r\n    <div className=\"loading-spinner\"></div>\r\n    <div className=\"loading-text\">Loading real-time data...</div>\r\n  </div>\r\n);\r\n\r\n// Reddit content component\r\nconst RedditContent = ({ data }) => {\r\n  if (!data || data.length === 0) {\r\n    return <div className=\"no-data-message\">No Reddit discussions found</div>;\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {data.map((post, index) => (\r\n        <div className=\"data-card\" key={post.id || index}>\r\n          <div className=\"card-header\">\r\n            <div className=\"card-title\">{post.title}</div>\r\n            <div className=\"card-meta\">{post.subreddit}</div>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            {post.selftext ? (\r\n              <>\r\n                {post.selftext.length > 200 ? \r\n                  `${post.selftext.substring(0, 200)}...` : \r\n                  post.selftext}\r\n              </>\r\n            ) : (\r\n              'Click to view the full post...'\r\n            )}\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <div className=\"card-stats\">\r\n              <div className=\"card-stat\">\r\n                <span className=\"stat-icon\">⬆️</span>\r\n                <span>{post.score}</span>\r\n              </div>\r\n              <div className=\"card-stat\">\r\n                <span className=\"stat-icon\">💬</span>\r\n                <span>{post.num_comments}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-meta\">Posted by u/{post.author} • {formatTimeAgo(post.created)}</div>\r\n          </div>\r\n          {post.url && (\r\n            <a \r\n              href={post.url} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\" \r\n              className=\"card-link\"\r\n            >\r\n              View on Reddit\r\n            </a>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n// Twitter content component\r\nconst TwitterContent = ({ data }) => {\r\n  if (!data || data.length === 0) {\r\n    return <div className=\"no-data-message\">No Twitter trends found</div>;\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {data.map((tweet, index) => (\r\n        <div className=\"data-card twitter-card\" key={tweet.id || index}>\r\n          <div className=\"card-header\">\r\n            <div className=\"user-info\">\r\n              <div className=\"avatar\">\r\n                {tweet.displayName?.charAt(0) || 'U'}\r\n              </div>\r\n              <div>\r\n                <div className=\"card-title\">{tweet.displayName}</div>\r\n                <div className=\"card-meta\">{tweet.username}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-content twitter-content\">{tweet.content}</div>\r\n          <div className=\"card-footer\">\r\n            <div className=\"card-stats\">\r\n              <div className=\"card-stat\">\r\n                <span className=\"stat-icon\">❤️</span>\r\n                <span>{tweet.likes}</span>\r\n              </div>\r\n              <div className=\"card-stat\">\r\n                <span className=\"stat-icon\">🔄</span>\r\n                <span>{tweet.retweets}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-meta\">{formatTimeAgo(tweet.created)}</div>\r\n          </div>\r\n          {tweet.url && (\r\n            <a \r\n              href={tweet.url} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\" \r\n              className=\"card-link\"\r\n            >\r\n              View on Twitter\r\n            </a>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n// GitHub content component\r\nconst GitHubContent = ({ data }) => {\r\n  if (!data || data.length === 0) {\r\n    return <div className=\"no-data-message\">No GitHub projects found</div>;\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {data.map((repo, index) => (\r\n        <div className=\"data-card github-card\" key={repo.id || index}>\r\n          <div className=\"card-header\">\r\n            <div className=\"card-title\">{repo.repo}</div>\r\n            <div className=\"card-meta\">by {repo.author}</div>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            {repo.description || 'No description available'}\r\n          </div>\r\n          <div className=\"language-tag\" style={{ \r\n            backgroundColor: getLanguageColor(repo.language) \r\n          }}>\r\n            {repo.language || 'Various'}\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <div className=\"card-stats\">\r\n              <div className=\"card-stat\">\r\n                <span className=\"stat-icon\">⭐</span>\r\n                <span>{repo.stars}</span>\r\n              </div>\r\n              <div className=\"card-stat\">\r\n                <span className=\"stat-icon\">🍴</span>\r\n                <span>{repo.forks}</span>\r\n              </div>\r\n              <div className=\"card-stat\">\r\n                <span className=\"stat-icon\">⚠️</span>\r\n                <span>{repo.issues}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-meta\">Updated {formatTimeAgo(repo.updated)}</div>\r\n          </div>\r\n          {repo.url && (\r\n            <a \r\n              href={repo.url} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\" \r\n              className=\"card-link\"\r\n            >\r\n              View on GitHub\r\n            </a>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n// HuggingFace content component\r\nconst HuggingFaceContent = ({ data }) => {\r\n  if (!data || data.length === 0) {\r\n    return <div className=\"no-data-message\">No HuggingFace models found</div>;\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {data.map((model, index) => (\r\n        <div className=\"data-card huggingface-card\" key={model.id || index}>\r\n          <div className=\"card-header\">\r\n            <div className=\"card-title\">{model.model}</div>\r\n            <div className=\"card-meta\">by {model.author}</div>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            {model.description || 'No description available'}\r\n          </div>\r\n          <div className=\"card-tags\">\r\n            {model.tags?.map((tag, i) => (\r\n              <span key={i} className=\"model-tag\">{tag}</span>\r\n            ))}\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <div className=\"card-stats\">\r\n              <div className=\"card-stat\">\r\n                <span className=\"stat-icon\">⬇️</span>\r\n                <span>{model.downloads?.toLocaleString() || 0}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-meta\">Updated {formatTimeAgo(model.updated)}</div>\r\n          </div>\r\n          {model.url && (\r\n            <a \r\n              href={model.url} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\" \r\n              className=\"card-link\"\r\n            >\r\n              View on HuggingFace\r\n            </a>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n// Helper function to format time ago\r\nfunction formatTimeAgo(dateString) {\r\n  if (!dateString) return 'Unknown time';\r\n  \r\n  const date = new Date(dateString);\r\n  const now = new Date();\r\n  const seconds = Math.floor((now - date) / 1000);\r\n  \r\n  if (seconds < 60) {\r\n    return 'just now';\r\n  }\r\n  \r\n  const minutes = Math.floor(seconds / 60);\r\n  if (minutes < 60) {\r\n    return `${minutes} minute${minutes !== 1 ? 's' : ''} ago`;\r\n  }\r\n  \r\n  const hours = Math.floor(minutes / 60);\r\n  if (hours < 24) {\r\n    return `${hours} hour${hours !== 1 ? 's' : ''} ago`;\r\n  }\r\n  \r\n  const days = Math.floor(hours / 24);\r\n  if (days < 30) {\r\n    return `${days} day${days !== 1 ? 's' : ''} ago`;\r\n  }\r\n  \r\n  const months = Math.floor(days / 30);\r\n  if (months < 12) {\r\n    return `${months} month${months !== 1 ? 's' : ''} ago`;\r\n  }\r\n  \r\n  const years = Math.floor(months / 12);\r\n  return `${years} year${years !== 1 ? 's' : ''} ago`;\r\n}\r\n\r\n// Helper function to get color for programming language\r\nfunction getLanguageColor(language) {\r\n  const colors = {\r\n    JavaScript: '#f1e05a',\r\n    TypeScript: '#2b7489',\r\n    Python: '#3572A5',\r\n    Java: '#b07219',\r\n    'C++': '#f34b7d',\r\n    C: '#555555',\r\n    'C#': '#178600',\r\n    PHP: '#4F5D95',\r\n    Ruby: '#701516',\r\n    Go: '#00ADD8',\r\n    Rust: '#dea584',\r\n    Swift: '#ffac45',\r\n    Kotlin: '#F18E33',\r\n    Markdown: '#083fa1',\r\n    HTML: '#e34c26',\r\n    CSS: '#563d7c',\r\n    Shell: '#89e051'\r\n  };\r\n  \r\n  return colors[language] || '#6e5494';\r\n}\r\n\r\nexport default RealTimeDataDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}