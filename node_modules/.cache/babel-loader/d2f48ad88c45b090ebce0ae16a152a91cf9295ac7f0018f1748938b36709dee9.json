{"ast":null,"code":"var _jsxFileName = \"D:\\\\Groktutuor\\\\groktutor-new\\\\src\\\\components\\\\RealTimeDataDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchDataWithCache, realTimeService } from '../services/dataService';\nimport { useNavigation } from '../services/navigationService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RealTimeDataDashboard = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState('reddit');\n  const [data, setData] = useState({\n    reddit: null,\n    twitter: null,\n    github: null,\n    huggingface: null\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastUpdated, setLastUpdated] = useState(new Date());\n  const [autoRefresh, setAutoRefresh] = useState(true);\n  const [refreshInterval, setRefreshInterval] = useState(300);\n\n  // Handle initial data loading\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        setIsLoading(true);\n        const platformData = await fetchDataWithCache(activeTab);\n        setData(prev => ({\n          ...prev,\n          [activeTab]: platformData\n        }));\n        setLastUpdated(new Date());\n        setIsLoading(false);\n      } catch (error) {\n        console.error(`Error fetching ${activeTab} data:`, error);\n        setIsLoading(false);\n      }\n    };\n    fetchInitialData();\n\n    // Set up real-time updates for the current tab\n    const unsubscribe = realTimeService.subscribe(activeTab, newData => {\n      setData(prev => ({\n        ...prev,\n        [activeTab]: newData\n      }));\n      setLastUpdated(new Date());\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [activeTab]);\n\n  // Set up auto-refresh timer\n  useEffect(() => {\n    if (!autoRefresh) return;\n    const interval = setInterval(async () => {\n      try {\n        const platformData = await fetchDataWithCache(activeTab, true);\n        setData(prev => ({\n          ...prev,\n          [activeTab]: platformData\n        }));\n        setLastUpdated(new Date());\n      } catch (error) {\n        console.error(`Error refreshing ${activeTab} data:`, error);\n      }\n    }, refreshInterval * 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [autoRefresh, refreshInterval, activeTab]);\n\n  // Handle manual refresh\n  const handleRefresh = async () => {\n    try {\n      setIsLoading(true);\n      const platformData = await fetchDataWithCache(activeTab, true);\n      setData(prev => ({\n        ...prev,\n        [activeTab]: platformData\n      }));\n      setLastUpdated(new Date());\n      setIsLoading(false);\n    } catch (error) {\n      console.error(`Error refreshing ${activeTab} data:`, error);\n      setIsLoading(false);\n    }\n  };\n\n  // Toggle auto-refresh\n  const toggleAutoRefresh = () => {\n    setAutoRefresh(!autoRefresh);\n  };\n\n  // Get the appropriate content for the current tab\n  const renderTabContent = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 14\n      }, this);\n    }\n    switch (activeTab) {\n      case 'reddit':\n        return /*#__PURE__*/_jsxDEV(RedditContent, {\n          data: data.reddit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 16\n        }, this);\n      case 'twitter':\n        return /*#__PURE__*/_jsxDEV(TwitterContent, {\n          data: data.twitter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 16\n        }, this);\n      case 'github':\n        return /*#__PURE__*/_jsxDEV(GitHubContent, {\n          data: data.github\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 16\n        }, this);\n      case 'huggingface':\n        return /*#__PURE__*/_jsxDEV(HuggingFaceContent, {\n          data: data.huggingface\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Select a platform to view data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Real-Time Prompt Engineering Data Hub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: refreshInterval,\n          onChange: e => setRefreshInterval(Number(e.target.value)),\n          className: \"refresh-interval\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"60\",\n            children: \"Refresh: 1 minute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"300\",\n            children: \"Refresh: 5 minutes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"600\",\n            children: \"Refresh: 10 minutes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1800\",\n            children: \"Refresh: 30 minutes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dashboard-tab tab-reddit ${activeTab === 'reddit' ? 'active' : ''}`,\n        onClick: () => setActiveTab('reddit'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tab-icon\",\n          children: \"\\uD83D\\uDDE3\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), \"Reddit Discussions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dashboard-tab tab-twitter ${activeTab === 'twitter' ? 'active' : ''}`,\n        onClick: () => setActiveTab('twitter'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tab-icon\",\n          children: \"\\uD83D\\uDC26\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), \"Twitter Trends\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dashboard-tab tab-github ${activeTab === 'github' ? 'active' : ''}`,\n        onClick: () => setActiveTab('github'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tab-icon\",\n          children: \"\\uD83D\\uDCBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), \"GitHub Projects\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dashboard-tab tab-huggingface ${activeTab === 'huggingface' ? 'active' : ''}`,\n        onClick: () => setActiveTab('huggingface'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tab-icon\",\n          children: \"\\uD83E\\uDD17\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), \"HuggingFace Models\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: renderTabContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"refresh-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Last updated: \", lastUpdated.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auto-refresh\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Auto-refresh:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"toggle-switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: autoRefresh,\n            onChange: toggleAutoRefresh\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"toggle-slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"refresh-button\",\n          onClick: handleRefresh,\n          disabled: isLoading,\n          children: isLoading ? 'Refreshing...' : 'Refresh Now'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n// Loading spinner component\n_s(RealTimeDataDashboard, \"jZKP5/jO8u8xtAXdwukCQxJ3eT4=\");\n_c = RealTimeDataDashboard;\nconst LoadingSpinner = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"loading-container\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-spinner\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-text\",\n    children: \"Loading real-time data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 183,\n  columnNumber: 3\n}, this);\n\n// Reddit content component\n_c2 = LoadingSpinner;\nconst RedditContent = ({\n  data\n}) => {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data-message\",\n      children: \"No Reddit discussions found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-meta\",\n          children: post.subreddit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: post.selftext ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: post.selftext.length > 200 ? `${post.selftext.substring(0, 200)}...` : post.selftext\n        }, void 0, false) : 'Click to view the full post...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-icon\",\n              children: \"\\u2B06\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: post.score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-icon\",\n              children: \"\\uD83D\\uDCAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: post.num_comments\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-meta\",\n          children: [\"Posted by u/\", post.author, \" \\u2022 \", formatTimeAgo(post.created)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), post.url && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: post.url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"card-link\",\n        children: \"View on Reddit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this)]\n    }, post.id || index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n// Twitter content component\n_c3 = RedditContent;\nconst TwitterContent = ({\n  data\n}) => {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data-message\",\n      children: \"No Twitter trends found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.map((tweet, index) => {\n      var _tweet$displayName;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-card twitter-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: ((_tweet$displayName = tweet.displayName) === null || _tweet$displayName === void 0 ? void 0 : _tweet$displayName.charAt(0)) || 'U'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: tweet.displayName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-meta\",\n                children: tweet.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content twitter-content\",\n          children: tweet.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-icon\",\n                children: \"\\u2764\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: tweet.likes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-icon\",\n                children: \"\\uD83D\\uDD04\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: tweet.retweets\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-meta\",\n            children: formatTimeAgo(tweet.created)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), tweet.url && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: tweet.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"card-link\",\n          children: \"View on Twitter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, tweet.id || index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false);\n};\n\n// GitHub content component\n_c4 = TwitterContent;\nconst GitHubContent = ({\n  data\n}) => {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data-message\",\n      children: \"No GitHub projects found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.map((repo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-card github-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: repo.repo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-meta\",\n          children: [\"by \", repo.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: repo.description || 'No description available'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-tag\",\n        style: {\n          backgroundColor: getLanguageColor(repo.language)\n        },\n        children: repo.language || 'Various'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-icon\",\n              children: \"\\u2B50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: repo.stars\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-icon\",\n              children: \"\\uD83C\\uDF74\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: repo.forks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-icon\",\n              children: \"\\u26A0\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: repo.issues\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-meta\",\n          children: [\"Updated \", formatTimeAgo(repo.updated)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this), repo.url && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: repo.url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"card-link\",\n        children: \"View on GitHub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }, this)]\n    }, repo.id || index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n// HuggingFace content component\n_c5 = GitHubContent;\nconst HuggingFaceContent = ({\n  data\n}) => {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data-message\",\n      children: \"No HuggingFace models found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.map((model, index) => {\n      var _model$tags, _model$downloads;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-card huggingface-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-title\",\n            children: model.model\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-meta\",\n            children: [\"by \", model.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: model.description || 'No description available'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-tags\",\n          children: (_model$tags = model.tags) === null || _model$tags === void 0 ? void 0 : _model$tags.map((tag, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"model-tag\",\n            children: tag\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-stats\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-icon\",\n                children: \"\\u2B07\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: ((_model$downloads = model.downloads) === null || _model$downloads === void 0 ? void 0 : _model$downloads.toLocaleString()) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-meta\",\n            children: [\"Updated \", formatTimeAgo(model.updated)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), model.url && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: model.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"card-link\",\n          children: \"View on HuggingFace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this)]\n      }, model.id || index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false);\n};\n\n// Helper function to format time ago\n_c6 = HuggingFaceContent;\nfunction formatTimeAgo(dateString) {\n  if (!dateString) return 'Unknown time';\n  const date = new Date(dateString);\n  const now = new Date();\n  const seconds = Math.floor((now - date) / 1000);\n  if (seconds < 60) {\n    return 'just now';\n  }\n  const minutes = Math.floor(seconds / 60);\n  if (minutes < 60) {\n    return `${minutes} minute${minutes !== 1 ? 's' : ''} ago`;\n  }\n  const hours = Math.floor(minutes / 60);\n  if (hours < 24) {\n    return `${hours} hour${hours !== 1 ? 's' : ''} ago`;\n  }\n  const days = Math.floor(hours / 24);\n  if (days < 30) {\n    return `${days} day${days !== 1 ? 's' : ''} ago`;\n  }\n  const months = Math.floor(days / 30);\n  if (months < 12) {\n    return `${months} month${months !== 1 ? 's' : ''} ago`;\n  }\n  const years = Math.floor(months / 12);\n  return `${years} year${years !== 1 ? 's' : ''} ago`;\n}\n\n// Helper function to get color for programming language\nfunction getLanguageColor(language) {\n  const colors = {\n    JavaScript: '#f1e05a',\n    TypeScript: '#2b7489',\n    Python: '#3572A5',\n    Java: '#b07219',\n    'C++': '#f34b7d',\n    C: '#555555',\n    'C#': '#178600',\n    PHP: '#4F5D95',\n    Ruby: '#701516',\n    Go: '#00ADD8',\n    Rust: '#dea584',\n    Swift: '#ffac45',\n    Kotlin: '#F18E33',\n    Markdown: '#083fa1',\n    HTML: '#e34c26',\n    CSS: '#563d7c',\n    Shell: '#89e051'\n  };\n  return colors[language] || '#6e5494';\n}\nexport default RealTimeDataDashboard;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"RealTimeDataDashboard\");\n$RefreshReg$(_c2, \"LoadingSpinner\");\n$RefreshReg$(_c3, \"RedditContent\");\n$RefreshReg$(_c4, \"TwitterContent\");\n$RefreshReg$(_c5, \"GitHubContent\");\n$RefreshReg$(_c6, \"HuggingFaceContent\");","map":{"version":3,"names":["React","useState","useEffect","fetchDataWithCache","realTimeService","useNavigation","jsxDEV","_jsxDEV","Fragment","_Fragment","RealTimeDataDashboard","_s","activeTab","setActiveTab","data","setData","reddit","twitter","github","huggingface","isLoading","setIsLoading","lastUpdated","setLastUpdated","Date","autoRefresh","setAutoRefresh","refreshInterval","setRefreshInterval","fetchInitialData","platformData","prev","error","console","unsubscribe","subscribe","newData","interval","setInterval","clearInterval","handleRefresh","toggleAutoRefresh","renderTabContent","LoadingSpinner","fileName","_jsxFileName","lineNumber","columnNumber","RedditContent","TwitterContent","GitHubContent","HuggingFaceContent","children","className","value","onChange","e","Number","target","onClick","toLocaleString","type","checked","disabled","_c","_c2","length","map","post","index","title","subreddit","selftext","substring","score","num_comments","author","formatTimeAgo","created","url","href","rel","id","_c3","tweet","_tweet$displayName","displayName","charAt","username","content","likes","retweets","_c4","repo","description","style","backgroundColor","getLanguageColor","language","stars","forks","issues","updated","_c5","model","_model$tags","_model$downloads","tags","tag","i","downloads","_c6","dateString","date","now","seconds","Math","floor","minutes","hours","days","months","years","colors","JavaScript","TypeScript","Python","Java","C","PHP","Ruby","Go","Rust","Swift","Kotlin","Markdown","HTML","CSS","Shell","$RefreshReg$"],"sources":["D:/Groktutuor/groktutor-new/src/components/RealTimeDataDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchDataWithCache, realTimeService } from '../services/dataService';\r\nimport { useNavigation } from '../services/navigationService';\r\n\r\nconst RealTimeDataDashboard = () => {\r\n  const [activeTab, setActiveTab] = useState('reddit');\r\n  const [data, setData] = useState({\r\n    reddit: null,\r\n    twitter: null,\r\n    github: null,\r\n    huggingface: null\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [lastUpdated, setLastUpdated] = useState(new Date());\r\n  const [autoRefresh, setAutoRefresh] = useState(true);\r\n  const [refreshInterval, setRefreshInterval] = useState(300);\r\n  \r\n  // Handle initial data loading\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const platformData = await fetchDataWithCache(activeTab);\r\n        setData(prev => ({ ...prev, [activeTab]: platformData }));\r\n        setLastUpdated(new Date());\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error(`Error fetching ${activeTab} data:`, error);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchInitialData();\r\n    \r\n    // Set up real-time updates for the current tab\r\n    const unsubscribe = realTimeService.subscribe(activeTab, (newData) => {\r\n      setData(prev => ({ ...prev, [activeTab]: newData }));\r\n      setLastUpdated(new Date());\r\n    });\r\n    \r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [activeTab]);\r\n  \r\n  // Set up auto-refresh timer\r\n  useEffect(() => {\r\n    if (!autoRefresh) return;\r\n    \r\n    const interval = setInterval(async () => {\r\n      try {\r\n        const platformData = await fetchDataWithCache(activeTab, true);\r\n        setData(prev => ({ ...prev, [activeTab]: platformData }));\r\n        setLastUpdated(new Date());\r\n      } catch (error) {\r\n        console.error(`Error refreshing ${activeTab} data:`, error);\r\n      }\r\n    }, refreshInterval * 1000);\r\n    \r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [autoRefresh, refreshInterval, activeTab]);\r\n  \r\n  // Handle manual refresh\r\n  const handleRefresh = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const platformData = await fetchDataWithCache(activeTab, true);\r\n      setData(prev => ({ ...prev, [activeTab]: platformData }));\r\n      setLastUpdated(new Date());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error(`Error refreshing ${activeTab} data:`, error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Toggle auto-refresh\r\n  const toggleAutoRefresh = () => {\r\n    setAutoRefresh(!autoRefresh);\r\n  };\r\n  \r\n  // Get the appropriate content for the current tab\r\n  const renderTabContent = () => {\r\n    if (isLoading) {\r\n      return <LoadingSpinner />;\r\n    }\r\n    \r\n    switch (activeTab) {\r\n      case 'reddit':\r\n        return <RedditContent data={data.reddit} />;\r\n      case 'twitter':\r\n        return <TwitterContent data={data.twitter} />;\r\n      case 'github':\r\n        return <GitHubContent data={data.github} />;\r\n      case 'huggingface':\r\n        return <HuggingFaceContent data={data.huggingface} />;\r\n      default:\r\n        return <div>Select a platform to view data</div>;\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"data-dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <div className=\"dashboard-title\">\r\n          <span>📊</span>\r\n          <span>Real-Time Prompt Engineering Data Hub</span>\r\n        </div>\r\n        <div className=\"dashboard-controls\">\r\n          <select \r\n            value={refreshInterval}\r\n            onChange={(e) => setRefreshInterval(Number(e.target.value))}\r\n            className=\"refresh-interval\"\r\n          >\r\n            <option value=\"60\">Refresh: 1 minute</option>\r\n            <option value=\"300\">Refresh: 5 minutes</option>\r\n            <option value=\"600\">Refresh: 10 minutes</option>\r\n            <option value=\"1800\">Refresh: 30 minutes</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"dashboard-tabs\">\r\n        <div \r\n          className={`dashboard-tab tab-reddit ${activeTab === 'reddit' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('reddit')}\r\n        >\r\n          <span className=\"tab-icon\">🗣️</span>\r\n          Reddit Discussions\r\n        </div>\r\n        <div \r\n          className={`dashboard-tab tab-twitter ${activeTab === 'twitter' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('twitter')}\r\n        >\r\n          <span className=\"tab-icon\">🐦</span>\r\n          Twitter Trends\r\n        </div>\r\n        <div \r\n          className={`dashboard-tab tab-github ${activeTab === 'github' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('github')}\r\n        >\r\n          <span className=\"tab-icon\">💻</span>\r\n          GitHub Projects\r\n        </div>\r\n        <div \r\n          className={`dashboard-tab tab-huggingface ${activeTab === 'huggingface' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('huggingface')}\r\n        >\r\n          <span className=\"tab-icon\">🤗</span>\r\n          HuggingFace Models\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"dashboard-content\">\r\n        {renderTabContent()}\r\n      </div>\r\n      \r\n      <div className=\"refresh-controls\">\r\n        <div>Last updated: {lastUpdated.toLocaleString()}</div>\r\n        <div className=\"auto-refresh\">\r\n          <span>Auto-refresh:</span>\r\n          <label className=\"toggle-switch\">\r\n            <input \r\n              type=\"checkbox\" \r\n              checked={autoRefresh} \r\n              onChange={toggleAutoRefresh}\r\n            />\r\n            <span className=\"toggle-slider\"></span>\r\n          </label>\r\n          <button className=\"refresh-button\" onClick={handleRefresh} disabled={isLoading}>\r\n            {isLoading ? 'Refreshing...' : 'Refresh Now'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Loading spinner component\r\nconst LoadingSpinner = () => (\r\n  <div className=\"loading-container\">\r\n    <div className=\"loading-spinner\"></div>\r\n    <div className=\"loading-text\">Loading real-time data...</div>\r\n  </div>\r\n);\r\n\r\n// Reddit content component\r\nconst RedditContent = ({ data }) => {\r\n  if (!data || data.length === 0) {\r\n    return <div className=\"no-data-message\">No Reddit discussions found</div>;\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {data.map((post, index) => (\r\n        <div className=\"data-card\" key={post.id || index}>\r\n          <div className=\"card-header\">\r\n            <div className=\"card-title\">{post.title}</div>\r\n            <div className=\"card-meta\">{post.subreddit}</div>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            {post.selftext ? (\r\n              <>\r\n                {post.selftext.length > 200 ? \r\n                  `${post.selftext.substring(0, 200)}...` : \r\n                  post.selftext}\r\n              </>\r\n            ) : (\r\n              'Click to view the full post...'\r\n            )}\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <div className=\"card-stats\">\r\n              <div className=\"card-stat\">\r\n                <span className=\"stat-icon\">⬆️</span>\r\n                <span>{post.score}</span>\r\n              </div>\r\n              <div className=\"card-stat\">\r\n                <span className=\"stat-icon\">💬</span>\r\n                <span>{post.num_comments}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-meta\">Posted by u/{post.author} • {formatTimeAgo(post.created)}</div>\r\n          </div>\r\n          {post.url && (\r\n            <a \r\n              href={post.url} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\" \r\n              className=\"card-link\"\r\n            >\r\n              View on Reddit\r\n            </a>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n// Twitter content component\r\nconst TwitterContent = ({ data }) => {\r\n  if (!data || data.length === 0) {\r\n    return <div className=\"no-data-message\">No Twitter trends found</div>;\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {data.map((tweet, index) => (\r\n        <div className=\"data-card twitter-card\" key={tweet.id || index}>\r\n          <div className=\"card-header\">\r\n            <div className=\"user-info\">\r\n              <div className=\"avatar\">\r\n                {tweet.displayName?.charAt(0) || 'U'}\r\n              </div>\r\n              <div>\r\n                <div className=\"card-title\">{tweet.displayName}</div>\r\n                <div className=\"card-meta\">{tweet.username}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-content twitter-content\">{tweet.content}</div>\r\n          <div className=\"card-footer\">\r\n            <div className=\"card-stats\">\r\n              <div className=\"card-stat\">\r\n                <span className=\"stat-icon\">❤️</span>\r\n                <span>{tweet.likes}</span>\r\n              </div>\r\n              <div className=\"card-stat\">\r\n                <span className=\"stat-icon\">🔄</span>\r\n                <span>{tweet.retweets}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-meta\">{formatTimeAgo(tweet.created)}</div>\r\n          </div>\r\n          {tweet.url && (\r\n            <a \r\n              href={tweet.url} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\" \r\n              className=\"card-link\"\r\n            >\r\n              View on Twitter\r\n            </a>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n// GitHub content component\r\nconst GitHubContent = ({ data }) => {\r\n  if (!data || data.length === 0) {\r\n    return <div className=\"no-data-message\">No GitHub projects found</div>;\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {data.map((repo, index) => (\r\n        <div className=\"data-card github-card\" key={repo.id || index}>\r\n          <div className=\"card-header\">\r\n            <div className=\"card-title\">{repo.repo}</div>\r\n            <div className=\"card-meta\">by {repo.author}</div>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            {repo.description || 'No description available'}\r\n          </div>\r\n          <div className=\"language-tag\" style={{ \r\n            backgroundColor: getLanguageColor(repo.language) \r\n          }}>\r\n            {repo.language || 'Various'}\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <div className=\"card-stats\">\r\n              <div className=\"card-stat\">\r\n                <span className=\"stat-icon\">⭐</span>\r\n                <span>{repo.stars}</span>\r\n              </div>\r\n              <div className=\"card-stat\">\r\n                <span className=\"stat-icon\">🍴</span>\r\n                <span>{repo.forks}</span>\r\n              </div>\r\n              <div className=\"card-stat\">\r\n                <span className=\"stat-icon\">⚠️</span>\r\n                <span>{repo.issues}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-meta\">Updated {formatTimeAgo(repo.updated)}</div>\r\n          </div>\r\n          {repo.url && (\r\n            <a \r\n              href={repo.url} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\" \r\n              className=\"card-link\"\r\n            >\r\n              View on GitHub\r\n            </a>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n// HuggingFace content component\r\nconst HuggingFaceContent = ({ data }) => {\r\n  if (!data || data.length === 0) {\r\n    return <div className=\"no-data-message\">No HuggingFace models found</div>;\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {data.map((model, index) => (\r\n        <div className=\"data-card huggingface-card\" key={model.id || index}>\r\n          <div className=\"card-header\">\r\n            <div className=\"card-title\">{model.model}</div>\r\n            <div className=\"card-meta\">by {model.author}</div>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            {model.description || 'No description available'}\r\n          </div>\r\n          <div className=\"card-tags\">\r\n            {model.tags?.map((tag, i) => (\r\n              <span key={i} className=\"model-tag\">{tag}</span>\r\n            ))}\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <div className=\"card-stats\">\r\n              <div className=\"card-stat\">\r\n                <span className=\"stat-icon\">⬇️</span>\r\n                <span>{model.downloads?.toLocaleString() || 0}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-meta\">Updated {formatTimeAgo(model.updated)}</div>\r\n          </div>\r\n          {model.url && (\r\n            <a \r\n              href={model.url} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\" \r\n              className=\"card-link\"\r\n            >\r\n              View on HuggingFace\r\n            </a>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n// Helper function to format time ago\r\nfunction formatTimeAgo(dateString) {\r\n  if (!dateString) return 'Unknown time';\r\n  \r\n  const date = new Date(dateString);\r\n  const now = new Date();\r\n  const seconds = Math.floor((now - date) / 1000);\r\n  \r\n  if (seconds < 60) {\r\n    return 'just now';\r\n  }\r\n  \r\n  const minutes = Math.floor(seconds / 60);\r\n  if (minutes < 60) {\r\n    return `${minutes} minute${minutes !== 1 ? 's' : ''} ago`;\r\n  }\r\n  \r\n  const hours = Math.floor(minutes / 60);\r\n  if (hours < 24) {\r\n    return `${hours} hour${hours !== 1 ? 's' : ''} ago`;\r\n  }\r\n  \r\n  const days = Math.floor(hours / 24);\r\n  if (days < 30) {\r\n    return `${days} day${days !== 1 ? 's' : ''} ago`;\r\n  }\r\n  \r\n  const months = Math.floor(days / 30);\r\n  if (months < 12) {\r\n    return `${months} month${months !== 1 ? 's' : ''} ago`;\r\n  }\r\n  \r\n  const years = Math.floor(months / 12);\r\n  return `${years} year${years !== 1 ? 's' : ''} ago`;\r\n}\r\n\r\n// Helper function to get color for programming language\r\nfunction getLanguageColor(language) {\r\n  const colors = {\r\n    JavaScript: '#f1e05a',\r\n    TypeScript: '#2b7489',\r\n    Python: '#3572A5',\r\n    Java: '#b07219',\r\n    'C++': '#f34b7d',\r\n    C: '#555555',\r\n    'C#': '#178600',\r\n    PHP: '#4F5D95',\r\n    Ruby: '#701516',\r\n    Go: '#00ADD8',\r\n    Rust: '#dea584',\r\n    Swift: '#ffac45',\r\n    Kotlin: '#F18E33',\r\n    Markdown: '#083fa1',\r\n    HTML: '#e34c26',\r\n    CSS: '#563d7c',\r\n    Shell: '#89e051'\r\n  };\r\n  \r\n  return colors[language] || '#6e5494';\r\n}\r\n\r\nexport default RealTimeDataDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}